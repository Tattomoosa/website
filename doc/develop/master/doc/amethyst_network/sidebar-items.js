initSidebarItems({"enum":[["ConnectionState","The state of the connection."],["NetEvent","Network events which you can send or and receive from an endpoint."]],"fn":[["send_event","Sends an event to the target NetConnection using the provided network Socket. The socket has to be bound."]],"struct":[["Host","'Host' abstracts Laminar udp sockets away."],["NetConnection","A network connection target data."],["NetIdentity","A network identity. It can represent either a client or a server. It represents anything that can own an entity or a component. Think of it as an identity card. When used as a resource, it designates the local network uuid."],["NetPacket","Represents a packet which could have any serializable payload."],["NetSocketSystem","The System managing the network state and connections. The T generic parameter corresponds to the network event type. Receives events and filters them. Received events will be inserted into the NetReceiveBuffer resource. To send an event, add it to the NetSendBuffer resource."],["NetworkBundle","A convenience bundle to create the infrastructure needed to send and receive network messages."],["ServerConfig","The configuration used for the networking system."]],"type":[["Result","The `amethyst_network` result type."]]});